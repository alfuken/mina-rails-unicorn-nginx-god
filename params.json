{"name":"Mina+Rails+Unicorn+Nginx+God","tagline":"An example deployment configuration using Mina for server running Rails app, Unicorn, nginx, and God.","body":"NB!\r\n---\r\n\r\nThis code is **highy outdated** and is left here for reference only.\r\nLast update was in **2012**, lot of things has happened since.\r\nIf you'd like to update it or take care of it - write me, and I'll transfer ownership to you.\r\n\r\n# Mina + Rails + Unicorn + nginx + God\r\n======================================\r\n\r\nAn example deployment configuration using [Mina](https://github.com/nadarei/mina) for deployment.\r\n\r\nDeploys and updates Rails application and config files for [Unicorn](http://unicorn.bogomips.org/), [nginx](http://wiki.nginx.org/Main), and [God](http://godrb.com/).\r\n\r\nWhy?\r\n----\r\n\r\nWhen I've started using Mina for deployment, these examples were what I needed most.\r\n\r\nNot to just copy and use, but also to read and understand.\r\n\r\nAfter a few days of tinkering I've come up with this setup.\r\n\r\nSo I thought, why not share? I hope it can be useful for somebody, so that one can see, learn, understand, and use.\r\n\r\nHow?\r\n----\r\n\r\nThis example assumes the following:\r\n\r\n* you're running Ubuntu in Vagrant locally (quite nice tool I'd say. Check out [RBates Railscast](http://railscasts.com/episodes/292-virtual-machines-with-vagrant) on this subject)\r\n* you already have a user, that will be running deployment and all the server stuff\r\n* this user have sudo privileges OR you have a separate user that have sudo privileges. You'll need sudoer for setup_extras and config:link tasks. If you don't have separate sudoer, script will assume that deployer have all the necessary sudo rights. If you know workaround, please, let me know about it!\r\n* you already installed and configured git, rvm (global installation preferred) and nginx, at least\r\n* probably something else I forgot at the moment. Don't expect flawless deploy from scratch anyway\r\n\r\nExample deployment to local vagrant virtual machine:\r\n```bash\r\n# copy config/deploy.rb to $YOUR_APP/config/deploy.rb\r\n# copy lib/mina to $YOUR_APP/lib\r\n# edit common settings and anything you like in config/deploy.rb\r\n# edit lib/mina/servers/*.rb to match your server configuration\r\nmina init\r\nmina setup          # Set up deploy server with paths, configs, etc. Requires sudo privileges or sudoer user\r\nmina deploy\r\nmina nginx:restart  # or nginx:start\r\nmina god:start      # it will also run unicorn automagically\r\n```\r\nYou should be up and running now. Yay!\r\n\r\nAll tasks by default will run for :default_server, which is :vagrant in this example. See config/deploy.rb lines 22 and 28-29\r\nWhen you'll need to run the same for production, add `to=server_config_name`, like this:\r\n```bash\r\nmina init to=production\r\nmina setup to=production\r\nmina deploy to=production\r\nmina nginx:restart to=production\r\nmina god:start to=production\r\n```\r\n\r\n`mina deploy to=production` sounds just right. :) Thanks [@rstacruz](http://github.com/rstacruz) for the hint!\r\nYou can, of course, set the :default_server to anything you like.\r\n\r\n`setup` task also invokes these additional tasks:\r\n```bash\r\ncreate_extra_paths\r\ngod:setup\r\ngod:upload\r\nunicorn:upload\r\nnginx:upload\r\n```\r\n\r\nand if you don't set separate sudoer user, these tasks invoked as well, implying that current user have sudo rights (if he doesn't, you'll be prompted to run 'sudo_setup' task, which does exactly that):\r\n\r\n```bash\r\ngod:link\r\nunicorn:link\r\nnginx:setup\r\nnginx:link\r\n```\r\n\r\nYou can, of course, run them one by one. And you will eventually do so, if you find yourself in need of modifying some config files.\r\n\r\nWhat now?\r\n---------\r\n\r\nYou can check God status:\r\n\r\n    mina god:status\r\n\r\n...or overall processes' status/health:\r\n\r\n    mina health\r\n\r\nYou can customize output of this command in lib/mina/extras.rb:33\r\n\r\n**NB!** If you're running FreeBSD, do `set :term_mode, :exec` and after running Mina make sure you have no bash zombies, running around, eating your CPU. Just in case...\r\n\r\nTo deploy next release, just run\r\n\r\n    mina deploy\r\n\r\nIf you've changed some of the config files for god/unicorn/nginx, you can upload them to server with `mina config:upload`.\r\n\r\nIf changed code includes unicorn or god control script (service), you will also need to run `mina config:link`, that requires sudo privileges. Keep in mind, that any nginx controlling task also requires sudo! Those are: stop, start, restart, reload, and status.\r\n\r\nIndividual tasks are also available, like `god:upload`, or `unicorn:link`.\r\n\r\nYou can as well run `mina god:parse:unicorn` to see how god's unicorn config file will look like without uploading it to server. Very useful for debugging!\r\n\r\nJust check out task files under lib/mina directory, most of the code there is quite self-explanatory!\r\n    \r\nMan, this code sucks!\r\n---------------------\r\n\r\nProbably. But it is the code I'm currently using for production deployment, and if you think you can improve\r\nit or just have a better idea regarding anything described here - send me an email or pull request.\r\n\r\nMe\r\n--\r\n\r\n* [Blog](http://alfuken.tumblr.com/)\r\n* [Twitter](http://twitter.com/alfuken)\r\n* [Github](https://github.com/alfuken)\r\n* [Github Page](http://alfuken.github.com/mina-rails-unicorn-nginx-god/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}